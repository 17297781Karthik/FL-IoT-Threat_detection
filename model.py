import torchimport torch.nn as nnclass FlModel(nn.Module):    def __init__(self, input_size, num_classes):        super(FlModel, self).__init__()        self.model = nn.Sequential(            nn.Linear(input_size, 256),  # First hidden layer            nn.BatchNorm1d(256),  # Batch normalization            nn.ReLU(),  # Activation            nn.Dropout(0.3),  # Dropout for regularization            nn.Linear(256, 128),  # Second hidden layer            nn.BatchNorm1d(128),  # Batch normalization            nn.ReLU(),  # Activation            nn.Dropout(0.3),  # Dropout for regularization            nn.Linear(128, 64),  # Third hidden layer            nn.BatchNorm1d(64),  # Batch normalization            nn.ReLU(),  # Activation            nn.Dropout(0.3),  # Dropout for regularization            nn.Linear(64, num_classes)  # Output layer        )    def forward(self, x):        return self.model(x)